@model BuckScience.Web.ViewModels.Profiles.ProfileDetailsVm
@{
    ViewData["Title"] = $"Profile: {Model.Name}";
}

<div class="property-details">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="sidebar-title">@Model.Name</h2>
        <a href="/properties/@Model.PropertyId/details" class="btn btn-custom-cancel btn-sm">
            <i class="fas fa-arrow-left"></i> Back to Property
        </a>
    </div>
    <hr class="sidebar-title-separator" />

    <div class="accordion" id="profileDetailsAccordion">

        <!-- Profile Information Section -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="profileInfoHeading">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#profileInfoCollapse" aria-expanded="true" aria-controls="profileInfoCollapse">
                    <i class="fas fa-user-circle me-2"></i>
                    Profile Information
                </button>
            </h2>
            <div id="profileInfoCollapse" class="accordion-collapse collapse show" aria-labelledby="profileInfoHeading" data-bs-parent="#profileDetailsAccordion">
                <div class="accordion-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-semibold">Name</label>
                                <p class="mb-0">@Model.Name</p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-semibold">Status</label>
                                <p class="mb-0">
                                    <span class="badge @GetProfileStatusBadgeClass(Model.ProfileStatus)">
                                        @Model.ProfileStatus
                                    </span>
                                </p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-semibold">Tag</label>
                                <p class="mb-0">
                                    <i class="fas fa-tag me-1"></i>@Model.TagName
                                </p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-semibold">Property</label>
                                <p class="mb-0">
                                    <i class="fas fa-map-marker-alt me-1"></i>@Model.PropertyName
                                </p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @if (!string.IsNullOrEmpty(Model.CoverPhotoUrl))
                            {
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">Cover Photo</label>
                                    <div class="text-center">
                                        <img src="@Model.CoverPhotoUrl" 
                                             class="img-fluid rounded shadow-sm" 
                                             alt="Cover photo for @Model.Name"
                                             style="max-height: 200px; object-fit: cover;" />
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="mb-3">
                                    <label class="form-label fw-semibold">Cover Photo</label>
                                    <div class="text-center py-3">
                                        <i class="fas fa-image fa-3x text-muted mb-2"></i>
                                        <p class="text-muted mb-0">No cover photo available</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tagged Photos Section -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="taggedPhotosHeading">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#taggedPhotosCollapse" aria-expanded="false" aria-controls="taggedPhotosCollapse">
                    <i class="fas fa-images me-2"></i>
                    Tagged Photos
                </button>
            </h2>
            <div id="taggedPhotosCollapse" class="accordion-collapse collapse" aria-labelledby="taggedPhotosHeading" data-bs-parent="#profileDetailsAccordion">
                <div class="accordion-body">
                    @if (Model.TaggedPhotos != null && Model.TaggedPhotos.Any())
                    {
                        <div class="row g-3">
                            @foreach (var photo in Model.TaggedPhotos)
                            {
                                <div class="col-6">
                                    <div class="card shadow-sm h-100">
                                        <img src="@photo.EncodedPhotoUrl"
                                             class="card-img-top w-100"
                                             alt="Tagged photo"
                                             style="height: 150px; object-fit: cover; border-radius: 10px; cursor:pointer;"
                                             onclick="showCoverPhotoModal(@photo.Id, '@photo.EncodedPhotoUrl')" />
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="mt-3">
                            <a href="/properties/@Model.PropertyId/photos" class="btn btn-custom-outline-primary">
                                <i class="fas fa-images me-1"></i> Tag Additional Photos
                            </a>
                        </div>

                        <!-- Cover Photo Modal -->
                        <div class="modal fade" id="coverPhotoModal" tabindex="-1" aria-labelledby="coverPhotoModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="coverPhotoModalLabel">Tagged Photo</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <img id="coverPhotoModalImg" src="" class="img-fluid" alt="Tagged photo" />
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary" id="makeCoverPhotoBtn">Make Cover Photo</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
                            // Move modal to body to ensure it appears above sidebar and overlays
                            document.addEventListener('DOMContentLoaded', function() {
                                var modal = document.getElementById('coverPhotoModal');
                                if (modal) {
                                    document.body.appendChild(modal);
                                }
                            });
                        </script>
                    }
                    else
                    {
                        <p class="text-muted">No photos found for tag "@Model.TagName".</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetProfileStatusBadgeClass(BuckScience.Domain.Enums.ProfileStatus status)
    {
        return status switch
        {
            BuckScience.Domain.Enums.ProfileStatus.Watching => "badge-custom-info",
            BuckScience.Domain.Enums.ProfileStatus.HitList => "badge-custom-warning",
            BuckScience.Domain.Enums.ProfileStatus.Harvested => "badge-custom-success",
            _ => "badge-custom-secondary"
        };
    }
}

@section Scripts {
    <script>
        let selectedPhotoId = null;
        function showCoverPhotoModal(photoId, photoUrl) {
            selectedPhotoId = photoId;
            document.getElementById('coverPhotoModalImg').src = photoUrl;
            var modal = new bootstrap.Modal(document.getElementById('coverPhotoModal'));
            modal.show();
        }
        document.addEventListener('DOMContentLoaded', function() {
            var modal = document.getElementById('coverPhotoModal');
            if (modal) {
                document.body.appendChild(modal);
            }
            // Attach event handler after DOM is ready
            var makeCoverPhotoBtn = document.getElementById('makeCoverPhotoBtn');
            if (makeCoverPhotoBtn) {
                makeCoverPhotoBtn.addEventListener('click', function() {
                    if (!selectedPhotoId) return;
                    fetch(`/profiles/@Model.Id/make-cover-photo`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                        },
                        body: JSON.stringify({ photoId: selectedPhotoId })
                    })
                    .then(response => {
                        if (response.ok) {
                            response.json().then(data => {
                                document.querySelector('img[alt="Cover photo for @Model.Name"]')?.setAttribute('src', data.coverPhotoUrl);
                                bootstrap.Modal.getInstance(document.getElementById('coverPhotoModal')).hide();
                            });
                        } else {
                            alert('Failed to set cover photo.');
                        }
                    })
                    .catch(() => alert('Failed to set cover photo.'));
                });
            }
        });
    </script>
}