@model BuckScience.Web.ViewModels.Properties.EditPropertyFeatureVm
@{
    ViewData["Title"] = "Edit Feature";
}

@Html.AntiForgeryToken()

<div class="feature-edit-form">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="sidebar-title">Edit Property Feature</h2>
        <a href="/properties/@Model.PropertyId/details" class="btn btn-custom-cancel btn-sm">
            <i class="fas fa-arrow-left"></i> Back to Property
        </a>
    </div>
    <hr class="sidebar-title-separator" />

    <!-- Property Information -->
    <div class="alert alert-info mb-3">
        <i class="fas fa-map-marker-alt me-2"></i>
        Editing feature for property: <strong>@Model.PropertyName</strong>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <h6><i class="fas fa-exclamation-triangle me-2"></i>Please correct the following errors:</h6>
            <div asp-validation-summary="All" class="mb-0"></div>
        </div>
    }

    <form method="post" action="/properties/@Model.PropertyId/features/@Model.Id/edit">
        @Html.AntiForgeryToken()
        
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="PropertyId" />
        <input type="hidden" asp-for="GeometryWkt" />
        <input type="hidden" asp-for="CreatedAt" />

        <div class="mb-3">
            <label asp-for="ClassificationType" class="form-label">Feature Type</label>
            <select asp-for="ClassificationType" class="form-select" required>
                <option value="">Select a feature type...</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.BeddingArea)">Bedding Area</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.FoodSource)">Food Source</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.TravelCorridor)">Travel Corridor</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.PinchPointFunnel)">Pinch Point/Funnel</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.WaterSource)">Water Source</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.SecurityCover)">Security Cover</option>
                <option value="@((int)BuckScience.Domain.Enums.ClassificationType.Other)">Other</option>
            </select>
            <span asp-validation-for="ClassificationType" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Notes" class="form-label">Notes</label>
            <textarea asp-for="Notes" class="form-control" rows="4" placeholder="Add any notes about this feature..."></textarea>
            <span asp-validation-for="Notes" class="text-danger"></span>
        </div>

        @if (Model.CreatedAt.HasValue)
        {
            <div class="mb-3">
                <label class="form-label text-muted">Created</label>
                <div class="p-2 bg-light border rounded">
                    <small class="text-muted">@Model.CreatedAt.Value.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
                </div>
            </div>
        }

        <div class="d-flex gap-2">
            <a href="/properties/@Model.PropertyId/details" class="btn btn-secondary flex-fill">
                <i class="fas fa-times me-1"></i>Cancel
            </a>
            <button type="submit" class="btn btn-success flex-fill">
                <i class="fas fa-save me-1"></i>Save Changes
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Initialize the form when loaded
        document.addEventListener('DOMContentLoaded', function() {
            console.log('EditFeature view loaded');
            
            // Set current property ID for potential navigation
            if (window.App) {
                window.App._currentPropertyId = @Model.PropertyId;
            }
        });
    </script>
}