@model BuckScience.Web.ViewModels.Properties.PropertyDetailsVm
@{
    ViewData["Title"] = $"{Model.Name} - Details";
}

<div class="property-details">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="sidebar-title">@Model.Name</h2>
        <a href="/properties" class="btn btn-custom-cancel btn-sm">
            <i class="fas fa-arrow-left"></i> Back to Properties
        </a>
    </div>
    <hr class="sidebar-title-separator" />

    <div class="accordion" id="propertyDetailsAccordion">

        <!-- Cameras Section -->
        <div class="accordion-item">
            <h2 class="accordion-header d-flex justify-content-between align-items-center" id="camerasHeading">
                <button class="accordion-button flex-grow-1" type="button" data-bs-toggle="collapse" data-bs-target="#camerasCollapse" aria-expanded="true" aria-controls="camerasCollapse">
                    <i class="fas fa-camera me-2"></i>
                    Cameras <span class="badge badge-custom-primary ms-2">@Model.Cameras.Count</span>
                </button>
            </h2>
            <div id="camerasCollapse" class="accordion-collapse collapse show" aria-labelledby="camerasHeading" data-bs-parent="#propertyDetailsAccordion">
                <div class="accordion-body">
                    @if (Model.Cameras.Any())
                    {
                        <div class="container-fluid px-0">
                            <div class="row g-3">
                                @foreach (var camera in Model.Cameras)
                                {
                                    <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                        <a href="/cameras/@camera.Id/details" class="card camera-card w-100 text-decoration-none">
                                            <div class="card-body">
                                                <h6 class="card-title mb-2">@camera.Name</h6>
                                                <p class="card-text text-muted small mb-2">
                                                    <span>Brand/Model: @camera.Brand @(!string.IsNullOrEmpty(camera.Model) ? $"/ {camera.Model}" : "")</span>
                                                </p>
                                                <p class="card-text text-muted small mb-2">
                                                    <i class="fas fa-map-marker-alt me-1"></i>
                                                    @camera.Latitude.ToString("F4"), @camera.Longitude.ToString("F4")
                                                </p>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <p class="card-text small mb-0">
                                                        <i class="fas fa-images me-1 text-custom-primary"></i>
                                                        <strong>@camera.PhotoCount</strong> photos
                                                    </p>
                                                    <span class="badge @(camera.IsActive ? "badge-custom-success" : "badge-custom-secondary")">
                                                        @(camera.IsActive ? "Active" : "Inactive")
                                                    </span>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                        <a href="/properties/@Model.Id/cameras/add" class="btn btn-custom-primary btn-sm ms-2 mt-3" style="min-width:unset; padding:0.25rem 0.75rem;">
                            <i class="fas fa-plus me-1"></i> Add Camera
                        </a>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-camera fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No cameras configured for this property yet.</p>
                            <a href="/properties/@Model.Id/cameras/add" class="btn btn-custom-primary">Add Camera</a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Profiles Section -->
        <div class="accordion-item">
            <h2 class="accordion-header d-flex justify-content-between align-items-center" id="profilesHeading">
                <button class="accordion-button collapsed flex-grow-1" type="button" data-bs-toggle="collapse" data-bs-target="#profilesCollapse" aria-expanded="false" aria-controls="profilesCollapse">
                    <i class="fas fa-crosshairs me-2"></i>
                    Profiles <span class="badge badge-custom-primary ms-2">@Model.Profiles.Count</span>
                </button>
            </h2>
            <div id="profilesCollapse" class="accordion-collapse collapse" aria-labelledby="profilesHeading" data-bs-parent="#propertyDetailsAccordion">
                <div class="accordion-body">
                    @if (Model.Profiles.Any())
                    {
                        <div class="row g-3">
                            @foreach (var profile in Model.Profiles)
                            {
                                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                    <a href="/profiles/@profile.Id" class="card profile-card d-flex flex-column" style="cursor:pointer;">
                                        <div class="position-relative">
                                            <img src="@profile.CoverPhotoUrl" class="card-img-top" alt="Cover photo for @profile.Name" style="object-fit: cover;">
                                            <div class="position-absolute top-0 end-0 m-2">
                                                <span class="badge @GetProfileStatusBadgeClass(profile.ProfileStatus)">
                                                    @profile.ProfileStatus
                                                </span>
                                            </div>
                                        </div>
                                        <div class="card-body text-center mt-auto">
                                            <h6 class="card-title mb-0">@profile.Name</h6>
                                        </div>
                                    </a>
                                </div>
                            }
                        </div>
                        <a href="/properties/@Model.Id/profiles/create" class="btn btn-custom-primary btn-sm ms-2 mt-3" onclick="event.stopPropagation();">
                            <i class="fas fa-plus me-1"></i> Add Profile
                        </a>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-crosshairs fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No profiles for this property yet.</p>
                            <a href="/properties/@Model.Id/profiles/create" class="btn btn-custom-primary">Add Profile</a>
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <!-- Features Section -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="featuresHeading">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#featuresCollapse" aria-expanded="false" aria-controls="featuresCollapse">
                    <i class="fas fa-map-marked-alt me-2"></i>
                    Features <span class="badge badge-custom-primary ms-2">@Model.Features.Count</span>
                </button>
            </h2>
            <div id="featuresCollapse" class="accordion-collapse collapse" aria-labelledby="featuresHeading" data-bs-parent="#propertyDetailsAccordion">
                <div class="accordion-body">
                    @if (Model.Features.Any())
                    {
                        <div class="row g-3">
                            @foreach (var feature in Model.Features)
                            {
                                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                    <div class="card feature-card d-flex flex-column" style="cursor:pointer;" onclick="navigateToFeature('@feature.Type')">
                                        <div class="card-body d-flex align-items-start">
                                            <div class="feature-icon me-3">
                                                <i class="@feature.Icon fa-2x text-custom-primary"></i>
                                            </div>
                                            <div>
                                                <h6 class="card-title">@feature.Name</h6>
                                                <p class="card-text text-muted small">@feature.Description</p>
                                                <span class="badge badge-custom-light">Coming Soon</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-map-marked-alt fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No features for this property yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

@functions {
    private string GetProfileStatusBadgeClass(BuckScience.Domain.Enums.ProfileStatus status)
    {
        return status switch
        {
            BuckScience.Domain.Enums.ProfileStatus.Watching => "badge-custom-info",
            BuckScience.Domain.Enums.ProfileStatus.HitList => "badge-custom-warning",
            BuckScience.Domain.Enums.ProfileStatus.Harvested => "badge-custom-success",
            _ => "badge-custom-secondary"
        };
    }
}

@section Styles {
    <style>
        .camera-card,
        .profile-card,
        .feature-card {
            height: 100%;
        }
        
        /* Better responsive card sizing */
        @@media (min-width: 768px) {
            .col-md-4 {
                min-width: 240px; /* Minimum width for medium screens */
            }
        }
        
        /* Keep cards from getting too narrow on small screens */
        @@media (min-width: 576px) and (max-width: 767.98px) {
            .col-sm-6 {
                min-width: 220px; /* Minimum width for small screens */
            }
        }
    </style>
}

@section Scripts {
    <script>
        function navigateToCamera(cameraId) {
            if (window.App && window.App.loadSidebar) {
                window.App.loadSidebar(`/cameras/${cameraId}/details`, { push: true });
            } else {
                console.log('Navigate to camera:', cameraId);
            }
        }

        function navigateToProfile(profileId) {
            if (window.App && window.App.loadSidebar) {
                window.App.loadSidebar(`/profiles/${profileId}`, { push: true });
            } else {
                window.location.href = `/profiles/${profileId}`;
            }
        }

        function navigateToFeature(featureType) {
            console.log('Navigate to feature:', featureType);
        }
    </script>
}
