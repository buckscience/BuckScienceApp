@model BuckScience.Web.ViewModels.SubscriptionViewModel
@{
    ViewData["Title"] = "Subscription Management";
}

<div class="container-fluid h-100 d-flex flex-column">
    <div class="d-flex flex-column h-100">
        <h2 class="sidebar-title">Subscription Management</h2>
        <hr class="sidebar-title-separator" />
        
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        
        @if (TempData["Info"] != null)
        {
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                @TempData["Info"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        
        @if (TempData["Warning"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                @TempData["Warning"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <div class="subscription-content flex-grow-1">
            <!-- Current Subscription Status -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-crown me-2"></i>Current Plan
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <h6 class="text-primary">@Model.GetTierDisplayName()</h6>
                            <p class="text-muted">@Model.GetTierDescription()</p>
                            
                            @if (Model.CurrentTier == BuckScience.Domain.Enums.SubscriptionTier.Trial)
                            {
                                <div class="alert alert-info">
                                    @if (Model.IsTrialExpired)
                                    {
                                        <text><i class="fas fa-exclamation-triangle me-2"></i><strong>Trial Expired</strong> - Please upgrade to continue using all features.</text>
                                    }
                                    else
                                    {
                                        <text><i class="fas fa-clock me-2"></i><strong>@Model.TrialDaysRemaining days remaining</strong> in your free trial.</text>
                                    }
                                </div>
                            }
                            
                            @if (Model.Subscription?.Status != null && Model.Subscription.Status != "active")
                            {
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                    <strong>Subscription Status:</strong> @Model.Subscription.Status
                                </div>
                            }
                        </div>
                        <div class="col-md-4 text-end">
                            @if (Model.CurrentTier != BuckScience.Domain.Enums.SubscriptionTier.Trial)
                            {
                                <h4 class="text-success">$@Model.GetTierPrice().ToString("F2")/@Model.GetTierInterval()</h4>
                            }
                            else
                            {
                                <h4 class="text-primary">Free</h4>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Current Usage & Limits -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-bar me-2"></i>Usage & Limits
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="text-center">
                                <i class="fas fa-map-marked-alt fa-2x text-primary mb-2"></i>
                                <h6>Properties</h6>
                                <p class="text-muted">
                                    @if (Model.MaxProperties == int.MaxValue)
                                    {
                                        <span>Unlimited</span>
                                    }
                                    else
                                    {
                                        <span>Up to @Model.MaxProperties</span>
                                    }
                                </p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="text-center">
                                <i class="fas fa-camera fa-2x text-success mb-2"></i>
                                <h6>Cameras</h6>
                                <p class="text-muted">
                                    @if (Model.MaxCameras == int.MaxValue)
                                    {
                                        <span>Unlimited</span>
                                    }
                                    else
                                    {
                                        <span>Up to @Model.MaxCameras</span>
                                    }
                                </p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="text-center">
                                <i class="fas fa-image fa-2x text-warning mb-2"></i>
                                <h6>Photos</h6>
                                <p class="text-muted">
                                    @if (Model.MaxPhotos == int.MaxValue)
                                    {
                                        <span>Unlimited</span>
                                    }
                                    else
                                    {
                                        <span>Up to @Model.MaxPhotos.ToString("N0")</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Subscription Plans -->
            @if (Model.CurrentTier == BuckScience.Domain.Enums.SubscriptionTier.Trial || Model.IsTrialExpired)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-rocket me-2"></i>Choose Your Plan
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var tier in Model.GetAvailableUpgrades())
                            {
                                <div class="col-md-3 mb-3">
                                    <div class="card h-100 border-primary position-relative">
                                        @if (tier == BuckScience.Domain.Enums.SubscriptionTier.Buck)
                                        {
                                            <div class="badge bg-success position-absolute top-0 start-50 translate-middle">
                                                Most Popular
                                            </div>
                                        }
                                        <div class="card-body text-center">
                                            <h6 class="card-title">@Model.GetTierDisplayName(tier)</h6>
                                            <h4 class="text-primary">
                                                $@Model.GetTierPrice(tier).ToString("F2")
                                                <small class="text-muted">/@Model.GetTierInterval(tier)</small>
                                            </h4>
                                            <ul class="list-unstyled small text-muted mb-3">
                                                @{
                                                    var limits = Model.GetTierLimits(tier);
                                                }
                                                <li><i class="fas fa-map-marked-alt text-primary me-1"></i>@limits.Properties Properties</li>
                                                <li><i class="fas fa-camera text-success me-1"></i>@limits.Cameras Cameras</li>
                                                <li><i class="fas fa-image text-warning me-1"></i>@limits.Photos Photos</li>
                                            </ul>
                                            @if (Model.CurrentTier == BuckScience.Domain.Enums.SubscriptionTier.Trial)
                                            {
                                                <form asp-action="Subscribe" method="post" class="mt-auto subscription-form">
                                                    <input type="hidden" name="tier" value="@tier" />
                                                    <button type="submit" class="btn btn-primary w-100">
                                                        Upgrade to Plan
                                                    </button>
                                                </form>
                                            }
                                            else
                                            {
                                                <form asp-action="Update" method="post" class="mt-auto subscription-form">
                                                    <input type="hidden" name="newTier" value="@tier" />
                                                    <button type="submit" class="btn btn-primary w-100">
                                                        Upgrade Now
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else if (Model.IsActive() && Model.CurrentTier != BuckScience.Domain.Enums.SubscriptionTier.Trial)
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-exchange-alt me-2"></i>Change Your Plan
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @{
                                var allPlans = new[] { 
                                    BuckScience.Domain.Enums.SubscriptionTier.Fawn,
                                    BuckScience.Domain.Enums.SubscriptionTier.Doe,
                                    BuckScience.Domain.Enums.SubscriptionTier.Buck,
                                    BuckScience.Domain.Enums.SubscriptionTier.Trophy
                                }.Where(t => t != Model.CurrentTier && 
                                           (t != BuckScience.Domain.Enums.SubscriptionTier.Trophy || 
                                            (Model.PricingInfo.ContainsKey(t) && Model.PricingInfo[t].IsActive)));
                            }
                            @foreach (var tier in allPlans)
                            {
                                <div class="col-md-3 mb-3">
                                    <div class="card h-100 @(tier > Model.CurrentTier ? "border-success" : "border-secondary")">
                                        <div class="card-body text-center">
                                            <h6 class="card-title">@Model.GetTierDisplayName(tier)</h6>
                                            <h5 class="@(tier > Model.CurrentTier ? "text-success" : "text-secondary")">
                                                $@Model.GetTierPrice(tier).ToString("F2")
                                                <small class="text-muted">/@Model.GetTierInterval(tier)</small>
                                            </h5>
                                            @{
                                                var limits = Model.GetTierLimits(tier);
                                            }
                                            <ul class="list-unstyled small text-muted mb-3">
                                                <li><i class="fas fa-map-marked-alt me-1"></i>@limits.Properties Properties</li>
                                                <li><i class="fas fa-camera me-1"></i>@limits.Cameras Cameras</li>
                                                <li><i class="fas fa-image me-1"></i>@limits.Photos Photos</li>
                                            </ul>
                                            <form asp-action="Update" method="post" class="mt-auto subscription-form">
                                                <input type="hidden" name="newTier" value="@tier" />
                                                <button type="submit" class="btn @(tier > Model.CurrentTier ? "btn-success" : "btn-outline-secondary") btn-sm w-100">
                                                    @if (tier > Model.CurrentTier)
                                                    {
                                                        <i class="fas fa-arrow-up me-1"></i><text>Upgrade</text>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-arrow-down me-1"></i><text>Downgrade</text>
                                                    }
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="row mt-3">
                            <div class="col-12">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong>Plan Changes:</strong> Upgrades take effect immediately. Downgrades will take effect at the end of your current billing period.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Add client-side logging for subscription form submissions
    const subscriptionForms = document.querySelectorAll('.subscription-form');
    subscriptionForms.forEach(form => {
        form.addEventListener('submit', function(e) {
            const tierInput = form.querySelector('input[name="newTier"]');
            const tier = tierInput ? tierInput.value : 'unknown';
            const action = form.getAttribute('action');
            
            console.log('[BuckScience Subscription Debug] Form submission started:', {
                tier: tier,
                action: action,
                timestamp: new Date().toISOString(),
                userAgent: navigator.userAgent
            });
            
            // Log current URL and any error states
            console.log('[BuckScience Subscription Debug] Current page state:', {
                currentUrl: window.location.href,
                hasErrors: document.querySelector('.alert-danger') !== null,
                hasWarnings: document.querySelector('.alert-warning') !== null
            });
        });
    });
    
    // Log any existing error messages for debugging
    const errorAlerts = document.querySelectorAll('.alert-danger');
    if (errorAlerts.length > 0) {
        errorAlerts.forEach(alert => {
            console.error('[BuckScience Subscription Debug] Error message detected:', alert.textContent.trim());
        });
    }
    
    // Log that pricing info is available for debugging  
    const pricingTierCount = @{
        if (Model.PricingInfo?.Count != null) 
        {
            @Model.PricingInfo.Count.ToString("0")
        } 
        else 
        {
            @:0
        }
    };
    console.log('[BuckScience Subscription Debug] Pricing info available for tier count:', pricingTierCount);
});
</script>