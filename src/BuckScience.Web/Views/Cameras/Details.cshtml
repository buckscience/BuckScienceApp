@model BuckScience.Web.ViewModels.Cameras.CameraDetailsVm
@{
    ViewData["Title"] = $"{Model.Name} - Camera Details";
}

<div class="camera-details">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="sidebar-title">@Model.Name</h2>
    </div>
    <hr class="sidebar-title-separator" />

    <div class="accordion" id="cameraDetailsAccordion">
        
        <!-- Basic Information Section -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="basicInfoHeading">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#basicInfoCollapse" aria-expanded="true" aria-controls="basicInfoCollapse">
                    <i class="fas fa-info-circle me-2"></i>
                    Camera Information
                </button>
            </h2>
            <div id="basicInfoCollapse" class="accordion-collapse collapse show" aria-labelledby="basicInfoHeading" data-bs-parent="#cameraDetailsAccordion">
                <div class="accordion-body">
                    <div class="row g-3">
                        <div class="col-12">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span class="fw-bold">Status</span>
                                <span class="badge @(Model.IsActive ? "badge-custom-success" : "badge-custom-secondary")">
                                    @(Model.IsActive ? "Active" : "Inactive")
                                </span>
                            </div>
                        </div>
                        
                        <div class="col-6">
                            <label class="form-label text-muted small">Brand</label>
                            <p class="mb-0 fw-semibold">@Model.Brand</p>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(Model.Model))
                        {
                            <div class="col-6">
                                <label class="form-label text-muted small">Model</label>
                                <p class="mb-0">@Model.Model</p>
                            </div>
                        }
                        
                        <div class="col-12">
                            <label class="form-label text-muted small">Location</label>
                            <p class="mb-0">
                                <i class="fas fa-map-marker-alt me-1 text-custom-primary"></i>
                                @Model.Latitude.ToString("F4"), @Model.Longitude.ToString("F4")
                            </p>
                        </div>
                        
                        <div class="col-6">
                            <label class="form-label text-muted small">Photos</label>
                            <p class="mb-0">
                                <i class="fas fa-images me-1 text-custom-primary"></i>
                                <strong>@Model.PhotoCount</strong> photos
                            </p>
                        </div>
                        
                        <div class="col-6">
                            <label class="form-label text-muted small">Created</label>
                            <p class="mb-0">@Model.CreatedDate.ToString("MMM dd, yyyy")</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Photos Section -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="photosHeading">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#photosCollapse" aria-expanded="false" aria-controls="photosCollapse">
                    <i class="fas fa-images me-2"></i>
                    Photos <span class="badge badge-custom-primary ms-2">@Model.PhotoCount</span>
                </button>
            </h2>
            <div id="photosCollapse" class="accordion-collapse collapse" aria-labelledby="photosHeading" data-bs-parent="#cameraDetailsAccordion">
                <div class="accordion-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Photos from this camera</span>
                        <div>
                            <a href="/cameras/@Model.Id/upload" class="btn btn-custom-primary btn-sm me-2">
                                <i class="fas fa-upload me-1"></i> Upload Photos
                            </a>
                        </div>
                    </div>
                    
                    @if (Model.PhotoCount == 0)
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-images fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No photos uploaded to this camera yet.</p>
                            <a href="/cameras/@Model.Id/upload" class="btn btn-custom-primary">Upload First Photos</a>
                        </div>
                    }
                    else
                    {
                        <!-- Sorting Controls -->
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="text-muted">@Model.PhotoCount total photos</span>
                            <div class="dropdown">
                                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-sort me-1"></i> Sort
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item @(Model.CurrentSort == "DateTakenDesc" ? "active" : "")" href="?sort=DateTakenDesc">Date Taken (Newest)</a></li>
                                    <li><a class="dropdown-item @(Model.CurrentSort == "DateTakenAsc" ? "active" : "")" href="?sort=DateTakenAsc">Date Taken (Oldest)</a></li>
                                </ul>
                            </div>
                        </div>

                        <!-- Photos grouped by month/year -->
                        @foreach (var group in Model.PhotoGroups)
                        {
                            <h5 class="mt-4 mb-3 text-primary">@group.MonthYear</h5>
                            <div class="photo-grid-container">
                                @foreach (var photo in group.Photos)
                                {
                                    <div class="photo-item mb-3">
                                        <div class="card h-100">
                                            <div class="position-relative">
                                                <img src="@photo.EncodedPhotoUrl" 
                                                     class="card-img-top" 
                                                     alt="Photo" 
                                                     data-bs-toggle="modal" 
                                                     data-bs-target="#photoModal"
                                                     data-photo-url="@photo.EncodedPhotoUrl"
                                                     data-date-taken="@photo.DateTaken.ToString("MM/dd/yyyy h:mm tt")"
                                                     data-date-uploaded="@photo.DateUploaded.ToString("MM/dd/yyyy h:mm tt")"
                                                     loading="lazy" />
                                            </div>
                                            <div class="card-body p-2">
                                                <small class="text-muted">
                                                    <div><strong>Taken:</strong> @photo.DateTaken.ToString("MM/dd/yyyy h:mm tt")</div>
                                                    <div><strong>Uploaded:</strong> @photo.DateUploaded.ToString("MM/dd/yyyy h:mm tt")</div>
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Camera Management Section -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="managementHeading">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#managementCollapse" aria-expanded="false" aria-controls="managementCollapse">
                    <i class="fas fa-cogs me-2"></i>
                    Camera Management
                </button>
            </h2>
            <div id="managementCollapse" class="accordion-collapse collapse" aria-labelledby="managementHeading" data-bs-parent="#cameraDetailsAccordion">
                <div class="accordion-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Edit or remove this camera</span>
                    </div>
                    
                    <div class="row g-2">
                        <div class="col-12 col-sm-6">
                            <a href="/properties/@Model.PropertyId/cameras/@Model.Id/edit" class="btn btn-outline-primary w-100">
                                <i class="fas fa-edit me-1"></i> Edit Camera
                            </a>
                        </div>
                        <div class="col-12 col-sm-6">
                            <a href="/properties/@Model.PropertyId/cameras/@Model.Id/delete" class="btn btn-outline-danger w-100">
                                <i class="fas fa-trash me-1"></i> Delete Camera
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Photo Modal -->
<div class="modal fade" id="photoModal" tabindex="-1" aria-labelledby="photoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="photoModalLabel">Photo Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalPhoto" src="" alt="Photo" class="img-fluid mb-3" style="max-height: 70vh;" />
                <div class="row">
                    <div class="col-6">
                        <small class="text-muted">
                            <strong>Date Taken:</strong><br>
                            <span id="modalDateTaken"></span>
                        </small>
                    </div>
                    <div class="col-6">
                        <small class="text-muted">
                            <strong>Date Uploaded:</strong><br>
                            <span id="modalDateUploaded"></span>
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function navigateBackToProperty(propertyId) {
        if (window.App && window.App.loadSidebar) {
            window.App.loadSidebar(`/properties/${propertyId}`, { push: true });
        } else {
            window.location.href = `/properties/${propertyId}`;
        }
    }

    // Update sidebar toggle position when the view loads
    document.addEventListener('DOMContentLoaded', function() {
        if (window.updateTogglePosition) {
            // Small delay to ensure content is fully rendered
            setTimeout(window.updateTogglePosition, 150);
        }
    });

    // Also update when sidebar content is loaded via AJAX
    document.addEventListener('sidebar:loaded', function() {
        if (window.updateTogglePosition) {
            setTimeout(window.updateTogglePosition, 150);
        }
    });

    // Handle photo modal
    const photoModal = document.getElementById('photoModal');
    if (photoModal) {
        photoModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const photoUrl = button.getAttribute('data-photo-url');
            const dateTaken = button.getAttribute('data-date-taken');
            const dateUploaded = button.getAttribute('data-date-uploaded');
            
            console.log('Loading photo URL:', photoUrl); // Debug logging
            
            const modalPhotoImg = document.getElementById('modalPhoto');
            if (modalPhotoImg) {
                modalPhotoImg.src = photoUrl;
                modalPhotoImg.onerror = function() {
                    console.error('Failed to load photo:', photoUrl);
                    this.alt = 'Failed to load photo';
                };
            }
            
            const modalDateTaken = document.getElementById('modalDateTaken');
            const modalDateUploaded = document.getElementById('modalDateUploaded');
            
            if (modalDateTaken) modalDateTaken.textContent = dateTaken;
            if (modalDateUploaded) modalDateUploaded.textContent = dateUploaded;
        });
        
        // Clean up modal when hidden
        photoModal.addEventListener('hidden.bs.modal', function (event) {
            const modalPhotoImg = document.getElementById('modalPhoto');
            if (modalPhotoImg) {
                modalPhotoImg.src = '';
            }
        });
    }
</script>