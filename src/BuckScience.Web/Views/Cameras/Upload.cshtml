@model BuckScience.Web.ViewModels.Photos.PhotoUploadVm
@{
    ViewData["Title"] = "Upload Photos";
}
<h1>Upload Photo</h1>

<form id="uploadForm" action="@Url.Content($"~/cameras/{Model.CameraId}/photos/upload")"
      method="post" enctype="multipart/form-data" novalidate>
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="PropertyId" />
    <input type="hidden" asp-for="CameraId" />

    <div id="errorContainer" class="alert alert-danger d-none" role="alert">
        <div id="errorMessage"></div>
    </div>
    
    <!-- Upload Instructions -->
    @if (Context.Request.Query["fromSetup"] == "1")
    {
        <div class="alert alert-primary mb-3" role="alert">
            <div class="text-center mb-2">
                <span class="badge bg-primary fs-6">Step 3</span>
            </div>
            <h5 class="text-center mb-2">Upload photos</h5>
            <p class="text-center mb-0">Upload a few photos from this camera to finish setup.</p>
        </div>
    }
    
    <div class="alert alert-info mb-4" role="alert">
        <h6 class="mb-2"><i class="fas fa-info-circle me-2"></i>How to upload photos</h6>
        <div class="small">
            <div class="mb-1">1. Choose one or more image files (JPEG/PNG)</div>
            <div class="mb-1">2. Larger images may take longer to process</div>
            <div class="mb-0">3. You can add more cameras or photos anytime</div>
        </div>
    </div>
    <!-- File Upload Section -->
    <div class="mb-4">
        <label asp-for="Files" class="form-label h6">
            <i class="fas fa-camera me-2"></i>Select Photos
        </label>
        <input asp-for="Files" type="file" class="form-control" multiple accept="image/jpeg,image/png,image/jpg" />
        <span asp-validation-for="Files" class="text-danger"></span>
        <div class="form-text mt-2">
            <small>You can select multiple image files (JPEG/PNG). Hold Ctrl/Cmd while clicking to select multiple files.</small>
        </div>
    </div>

    <!-- Upload Actions -->
    <div class="d-grid gap-2">
        <button type="submit" id="uploadBtn" class="btn btn-primary btn-lg">
            <span class="spinner-border spinner-border-sm d-none me-2" id="uploadSpinner" role="status" aria-hidden="true"></span>
            <i class="fas fa-upload me-2"></i>
            <span id="uploadText">Upload Photos</span>
        </button>
        <button type="button" class="btn btn-outline-secondary" onclick="if(window.App && window.App.loadSidebar) { window.App.loadSidebar('/cameras/@Model.CameraId/photos', { push: true }); } else { window.location.href = '/cameras/@Model.CameraId/photos'; }">
            <i class="fas fa-arrow-left me-2"></i>Back to Photos
        </button>
    </div>
</form>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="successModalLabel">
                    <i class="fas fa-check-circle me-2"></i>Upload Successful!
                </h5>
            </div>
            <div class="modal-body text-center">
                <div class="mb-3">
                    <i class="fas fa-images fa-3x text-success mb-3"></i>
                    <h4 id="uploadMessage">Photos uploaded successfully!</h4>
                    <p class="text-muted">What would you like to do next?</p>
                </div>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-primary" id="viewPhotosBtn">
                    <i class="fas fa-eye me-2"></i>View Photos
                </button>
                <button type="button" class="btn btn-outline-secondary" id="uploadMoreBtn">
                    <i class="fas fa-plus me-2"></i>Upload More
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <style>
        /* Ensure modal appears above all other elements including sidebar */
        #successModal {
            z-index: 1070 !important;
        }
        #successModal .modal-backdrop {
            z-index: 1060 !important;
        }
        /* Bootstrap modal backdrop fix */
        .modal-backdrop {
            z-index: 1060 !important;
        }
    </style>
    <script>
        document.getElementById('uploadForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Use the global upload form handler
            if (window.handleUploadFormSubmission) {
                window.handleUploadFormSubmission(this);
            } else {
                console.error('Global upload handler not available');
                // Fallback to original behavior
                const form = this;
                const formData = new FormData(form);
                const uploadBtn = document.getElementById('uploadBtn');
                const uploadSpinner = document.getElementById('uploadSpinner');
                const uploadText = document.getElementById('uploadText');
                const errorContainer = document.getElementById('errorContainer');
                
                // Show loading state
                uploadBtn.disabled = true;
                uploadSpinner.classList.remove('d-none');
                uploadText.textContent = 'Uploading...';
                errorContainer.classList.add('d-none');
                
                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success modal
                        const message = data.photoCount === 1 
                            ? `${data.photoCount} photo uploaded successfully!`
                            : `${data.photoCount} photos uploaded successfully!`;
                        document.getElementById('uploadMessage').textContent = message;
                        
                        // Set up modal buttons to use sidebar loading
                        document.getElementById('viewPhotosBtn').onclick = function() {
                            if (window.App && window.App.loadSidebar) {
                                window.App.loadSidebar(`/cameras/${data.cameraId}/photos`, { push: true });
                            } else {
                                window.location.href = `/cameras/${data.cameraId}/photos`;
                            }
                        };
                        
                        document.getElementById('uploadMoreBtn').onclick = function() {
                            // Reset form and hide modal
                            form.reset();
                            const modalElement = document.getElementById('successModal');
                            const modal = bootstrap.Modal.getInstance(modalElement);
                            modal.hide();
                            if (window.resetUploadButton) {
                                window.resetUploadButton();
                            }
                        };
                        
                        // Move modal to body to ensure it appears above sidebar
                        const modalElement = document.getElementById('successModal');
                        document.body.appendChild(modalElement);
                        
                        // Show modal
                        const modal = new bootstrap.Modal(modalElement);
                        modal.show();
                    } else {
                        // Show error
                        document.getElementById('errorMessage').textContent = data.error || 'Upload failed. Please try again.';
                        errorContainer.classList.remove('d-none');
                        if (window.resetUploadButton) {
                            window.resetUploadButton();
                        }
                    }
                })
                .catch(error => {
                    console.error('Upload error:', error);
                    document.getElementById('errorMessage').textContent = 'Upload failed. Please try again.';
                    errorContainer.classList.remove('d-none');
                    if (window.resetUploadButton) {
                        window.resetUploadButton();
                    }
                });
            }
        });
    </script>
}